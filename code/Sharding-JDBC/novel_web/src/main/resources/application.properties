spring.application.name = novel_web
server.servlet.context-path = /novel_web
spring.http.encoding.enabled = true
spring.http.encoding.charset = UTF-8
spring.http.encoding.force = true

spring.main.allow-bean-definition-overriding = true
# 驼峰转换
mybatis.configuration.map-underscore-to-camel-case = true

# 打开sql输出日志
spring.shardingsphere.props.sql.show = true

# 定义多个数据源
spring.shardingsphere.datasource.names = db1,m1,s1


spring.shardingsphere.datasource.db1.type = com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.db1.driver-class-name = com.mysql.jdbc.Driver
spring.shardingsphere.datasource.db1.url = jdbc:mysql://172.16.161.140:3306/user_db?characterEncoding=UTF-8&useSSL=false
spring.shardingsphere.datasource.db1.username = root
spring.shardingsphere.datasource.db1.password = L1178594290

spring.shardingsphere.datasource.m1.type = com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name = com.mysql.jdbc.Driver
spring.shardingsphere.datasource.m1.url = jdbc:mysql://172.16.161.140:3306/novel_db?characterEncoding=UTF-8&useSSL=false
spring.shardingsphere.datasource.m1.username = root
spring.shardingsphere.datasource.m1.password = L1178594290

spring.shardingsphere.datasource.s1.type = com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.s1.driver-class-name = com.mysql.jdbc.Driver
spring.shardingsphere.datasource.s1.url = jdbc:mysql://172.16.161.138:3306/novel_db?characterEncoding=UTF-8&useSSL=false
spring.shardingsphere.datasource.s1.username = root
spring.shardingsphere.datasource.s1.password = L1178594290

# 配置user_db数据节点,指定节点的信息 将会被替换为1或者2
spring.shardingsphere.sharding.tables.users.actual-data-nodes = db1.users_$->{1..2}
#指定users表 (逻辑表)的主键生成策略为 SNOWFLAKE
spring.shardingsphere.sharding.tables.users.key-generator.column = id
spring.shardingsphere.sharding.tables.users.key-generator.type = SNOWFLAKE
#指定users表的分片策略，分片策略包括分片键和分片算法
spring.shardingsphere.sharding.tables.users.table-strategy.inline.sharding-column = id
spring.shardingsphere.sharding.tables.users.table-strategy.inline.algorithm-expression = users_$->{id % 2 + 1}

# 主从
spring.shardingsphere.sharding.master-slave-rules.ms1.master-data-source-name = m1
spring.shardingsphere.sharding.master-slave-rules.ms1.slave-data-source-names = s1
# 配置主从数据节点
spring.shardingsphere.sharding.tables.novel.actual-data-nodes = ms1.novel



# 通过sharding-JDBC指定公共表
# 指定sys_region为公共表
spring.shardingsphere.sharding.broadcast-tables = sys_region
# 主键生成策略
spring.shardingsphere.sharding.tables.district.key-generator.column = id
spring.shardingsphere.sharding.tables.district.key-generator.type = SNOWFLAKE




